<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>