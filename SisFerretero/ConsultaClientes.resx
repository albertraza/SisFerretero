<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAloAAAGoCAIAAAARi9wyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAABxxJREFUeF7t1Vta4lAQhVHnPyGHR+8mpQ0lyKWJQmrtbz1pcnJ4+t926+x99w4A
        16t+/NIek8P2kwDgISoz6+/+HLYbA8CqKj/r7J4ctvsBwA+rID1uN+SwXQUAfl0l6r93VQ7btwHg2VSx
        7t3lHLbvAcDTqnTdvgs5bJ8BgOdXDbtlZ3PYjgaAF1Ixu3pyCMA2Vc+u2+kcthMB4BVV1a7YiRy2swDg
        pVXevl3PYTsCAF5dFe7bySEA21eRO7+jHLaXAWAzKnVnJocATFG1O7V/OWzvAMDGVPBOTQ4BGKSa92Vy
        CMAslb3jVQ7bowCwVUv42uQQgHGW9h1ODgEYZ2nf4f7msD0EANu2JPBwcgjAREsFPyeHAEy0VPBzcgjA
        UEsIl721/wHAEFXC/eQQgKGqhPvJIQBDVQn3k0MA5qoYyiEAk1UM5RCAySqGcgjAZBVDOQRgODkEADkE
        ADkEgJBDAJBDANiTQwCQQwCQQwAIOQQAOQSAPTkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQ
        QwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMACDkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQ
        QwAIOQQAOQQAOQSAkEMAkEMAkEMACDkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAI
        OQQAOQQAOQSAkEMAkEMAkEMACDkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQA
        OQQAOQSAkEMAkEMAkEMACDkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQA
        OQSAkEMAkEMAkEMACDkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSA
        kEMAkEMAkEMACDkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMA
        kEMAkEMACDkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMA
        kEMACDkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMA
        CDkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMACDkE
        ADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMACDkEADkE
        ADkEgJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMACDkEADkEADkE
        gJBDAJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMACDkEADkEADkEgJBD
        AJBDAJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMACDkEADkEADkEgJBDAJBD
        AJBDAAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMACDkEADkEADkEgJBDAJBDAJBD
        AAg5BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMACDkEADkEADkEgJBDAJBDAJBDAAg5
        BAA5BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMACDkEADkEADkEgJBDAJBDAJBDAAg5BAA5
        BAA5BICQQwCQQwCQQwAIOQQAOQQAOQSAkEMAkEMAkEMACDkEADkEADkEgJBDAJBDAJBDAAg5BAA5BAA5
        BICQQwCQQwCQQwCIt91u1/4EANPIIQDIIQDIIQAkhXIIwHRyCAAfOVREACaTQwCQQwDGWzoohwCMtnRQ
        DgEYbemgHAIw2tLBymHW/g0Am1cJlEMAJqsEyiEAk1UC5RCAySqBhznM2kMAsGEVv/3kEIChKn77ySEA
        Q1X89pNDACaq8n3sKIdZexoANqmy9zE5BGCiyt7H5BCAcap5B+s5zNo7ALAxFbyDySEAs1Ttjncih1l7
        EwA2o1J3PDkEYJDq3JedzmHW3geADajIfZkcAjBFFe7UzuYwa6cAwOuqtp2ZHAIwQrXtzL7LYdbOAoBX
        VFU7vws5zNqJAPBaqmff7nIOs3YuALyKKtmlXZXDrJ0OAM+vGnbFrs1h1r4BAM+s6nXdbsjhsvYxAHg2
        VaxbdnMOs/ZVAHgSFarbd08Ol7UbAMAvqjjdu/tz+Ll2IQD4SVWj/9sDcrisXQ4AVlX5edAelsPDtRsD
        wENUZlbYKjk8XPslAHCTysnKWz2Hbe1HAkBTwfjJ7XZ/ANWHRCv/s6AEAAAAAElFTkSuQmCC
</value>
  </data>
</root>