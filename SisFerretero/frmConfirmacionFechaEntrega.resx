<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>