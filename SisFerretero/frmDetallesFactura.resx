<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>